name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'


    ## create application-database.yml
    - name: make application-database.yml
      run: |
        cd ./src/main/resources
        touch ./application-database.yml
        echo "${{ secrets.DATABASE }}" >> ./application-database.yml
      shell: bash

    ## create application-jwt.yml
    - name: make application-jwt.yml
      run: |
        cd ./src/main/resources
        touch ./application-jwt.yml
        echo "${{ secrets.JWT }}" >> ./application-jwt.yml
      shell: bash

    ## create application-oauth.yml
    - name: make application-oauth.yml
      run: |
        cd ./src/main/resources
        touch ./application-oauth.yml
        echo "${{ secrets.OAUTH }}" >> ./application-oauth.yml
      shell: bash

    ## gradle build
    - name: Build with Gradle
      run: ./gradlew bootJar

    ## 이미지 빌드 및 도커허브에 push
    - name: spring docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/pm-spring ./src/main/java
        docker push ${{ secrets.DOCKER_REPO }}/pm-spring

    ## 이미지 빌드 및 도커허브에 push
    - name: nginx docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/pm-nginx ./nginx
        docker push ${{ secrets.DOCKER_REPO }}/pm-nginx

    ## docker compose up
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/second-eyes-web
          sudo docker pull ${{ secrets.DOCKER_REPO }}/second-eyes-nginx
          docker-compose up -d
          docker image prune -f
